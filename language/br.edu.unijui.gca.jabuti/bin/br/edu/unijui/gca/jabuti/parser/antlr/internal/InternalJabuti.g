/*
 * generated by Xtext 2.31.0
 */
grammar InternalJabuti;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package br.edu.unijui.gca.jabuti.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.edu.unijui.gca.jabuti.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.edu.unijui.gca.jabuti.services.JabutiGrammarAccess;

}

@parser::members {

 	private JabutiGrammarAccess grammarAccess;

    public InternalJabutiParser(TokenStream input, JabutiGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected JabutiGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"br.edu.unijui.gca.jabuti.Jabuti.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getContractContractParserRuleCall_1_0());
				}
				lv_contract_1_0=ruleContract
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"contract",
						lv_contract_1_0,
						"br.edu.unijui.gca.jabuti.Jabuti.Contract");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"br.edu.unijui.gca.jabuti.Jabuti.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContract
entryRuleContract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContractRule()); }
	iv_ruleContract=ruleContract
	{ $current=$iv_ruleContract.current; }
	EOF;

// Rule Contract
ruleContract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='contract'
		{
			newLeafNode(otherlv_0, grammarAccess.getContractAccess().getContractKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContractRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='dates'
		{
			newLeafNode(otherlv_3, grammarAccess.getContractAccess().getDatesKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_4());
		}
		otherlv_5='beginDate'
		{
			newLeafNode(otherlv_5, grammarAccess.getContractAccess().getBeginDateKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getContractAccess().getEqualsSignKeyword_6());
		}
		(
			(
				lv_beginDate_7_0=RULE_STRING
				{
					newLeafNode(lv_beginDate_7_0, grammarAccess.getContractAccess().getBeginDateSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContractRule());
					}
					setWithLastConsumed(
						$current,
						"beginDate",
						lv_beginDate_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='dueDate'
		{
			newLeafNode(otherlv_8, grammarAccess.getContractAccess().getDueDateKeyword_8());
		}
		otherlv_9='='
		{
			newLeafNode(otherlv_9, grammarAccess.getContractAccess().getEqualsSignKeyword_9());
		}
		(
			(
				lv_dueDate_10_0=RULE_STRING
				{
					newLeafNode(lv_dueDate_10_0, grammarAccess.getContractAccess().getDueDateSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContractRule());
					}
					setWithLastConsumed(
						$current,
						"dueDate",
						lv_dueDate_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getContractAccess().getRightCurlyBracketKeyword_11());
		}
		otherlv_12='parties'
		{
			newLeafNode(otherlv_12, grammarAccess.getContractAccess().getPartiesKeyword_12());
		}
		otherlv_13='{'
		{
			newLeafNode(otherlv_13, grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_13());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContractAccess().getApplicationApplicationParserRuleCall_14_0());
				}
				lv_application_14_0=ruleApplication
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractRule());
					}
					set(
						$current,
						"application",
						lv_application_14_0,
						"br.edu.unijui.gca.jabuti.Jabuti.Application");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getContractAccess().getProcessProcessParserRuleCall_15_0());
				}
				lv_process_15_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractRule());
					}
					set(
						$current,
						"process",
						lv_process_15_0,
						"br.edu.unijui.gca.jabuti.Jabuti.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getContractAccess().getRightCurlyBracketKeyword_16());
		}
		(
			otherlv_17='variables'
			{
				newLeafNode(otherlv_17, grammarAccess.getContractAccess().getVariablesKeyword_17_0());
			}
			otherlv_18='{'
			{
				newLeafNode(otherlv_18, grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_17_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContractAccess().getVariablesVariableParserRuleCall_17_2_0());
					}
					lv_variables_19_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContractRule());
						}
						add(
							$current,
							"variables",
							lv_variables_19_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_20='}'
			{
				newLeafNode(otherlv_20, grammarAccess.getContractAccess().getRightCurlyBracketKeyword_17_3());
			}
		)?
		otherlv_21='clauses'
		{
			newLeafNode(otherlv_21, grammarAccess.getContractAccess().getClausesKeyword_18());
		}
		otherlv_22='{'
		{
			newLeafNode(otherlv_22, grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_19());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContractAccess().getClausesClauseParserRuleCall_20_0());
				}
				lv_clauses_23_0=ruleClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractRule());
					}
					add(
						$current,
						"clauses",
						lv_clauses_23_0,
						"br.edu.unijui.gca.jabuti.Jabuti.Clause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_24='}'
		{
			newLeafNode(otherlv_24, grammarAccess.getContractAccess().getRightCurlyBracketKeyword_21());
		}
		otherlv_25='}'
		{
			newLeafNode(otherlv_25, grammarAccess.getContractAccess().getRightCurlyBracketKeyword_22());
		}
	)
;

// Entry rule entryRuleClause
entryRuleClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClauseRule()); }
	iv_ruleClause=ruleClause
	{ $current=$iv_ruleClause.current; }
	EOF;

// Rule Clause
ruleClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getClauseAccess().getRightParserRuleCall_0_0());
			}
			this_Right_0=ruleRight
			{
				$current = $this_Right_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getClauseAccess().getProhibitionParserRuleCall_0_1());
			}
			this_Prohibition_1=ruleProhibition
			{
				$current = $this_Prohibition_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getClauseAccess().getObligationParserRuleCall_0_2());
			}
			this_Obligation_2=ruleObligation
			{
				$current = $this_Obligation_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getClauseAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_4='rolePlayer'
		{
			newLeafNode(otherlv_4, grammarAccess.getClauseAccess().getRolePlayerKeyword_2());
		}
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getClauseAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClauseAccess().getRolePlayerRolePlayerEnumRuleCall_4_0());
				}
				lv_rolePlayer_6_0=ruleRolePlayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClauseRule());
					}
					set(
						$current,
						"rolePlayer",
						lv_rolePlayer_6_0,
						"br.edu.unijui.gca.jabuti.Jabuti.RolePlayer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='operation'
		{
			newLeafNode(otherlv_7, grammarAccess.getClauseAccess().getOperationKeyword_5());
		}
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getClauseAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClauseAccess().getOperationOperationEnumRuleCall_7_0());
				}
				lv_operation_9_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClauseRule());
					}
					set(
						$current,
						"operation",
						lv_operation_9_0,
						"br.edu.unijui.gca.jabuti.Jabuti.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='terms'
		{
			newLeafNode(otherlv_10, grammarAccess.getClauseAccess().getTermsKeyword_8());
		}
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getClauseAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClauseAccess().getTermsTermsParserRuleCall_10_0());
				}
				lv_terms_12_0=ruleTerms
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClauseRule());
					}
					set(
						$current,
						"terms",
						lv_terms_12_0,
						"br.edu.unijui.gca.jabuti.Jabuti.Terms");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getClauseAccess().getRightCurlyBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClauseAccess().getEventLogEventLogParserRuleCall_12_0());
				}
				lv_eventLog_14_0=ruleEventLog
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClauseRule());
					}
					add(
						$current,
						"eventLog",
						lv_eventLog_14_0,
						"br.edu.unijui.gca.jabuti.Jabuti.EventLog");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getClauseAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleRight
entryRuleRight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRightRule()); }
	iv_ruleRight=ruleRight
	{ $current=$iv_ruleRight.current; }
	EOF;

// Rule Right
ruleRight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='right'
		{
			newLeafNode(otherlv_0, grammarAccess.getRightAccess().getRightKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRightAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRightRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleObligation
entryRuleObligation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObligationRule()); }
	iv_ruleObligation=ruleObligation
	{ $current=$iv_ruleObligation.current; }
	EOF;

// Rule Obligation
ruleObligation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='obligation'
		{
			newLeafNode(otherlv_0, grammarAccess.getObligationAccess().getObligationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getObligationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObligationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleProhibition
entryRuleProhibition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProhibitionRule()); }
	iv_ruleProhibition=ruleProhibition
	{ $current=$iv_ruleProhibition.current; }
	EOF;

// Rule Prohibition
ruleProhibition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='prohibition'
		{
			newLeafNode(otherlv_0, grammarAccess.getProhibitionAccess().getProhibitionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProhibitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProhibitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApplicationRule()); }
	iv_ruleApplication=ruleApplication
	{ $current=$iv_ruleApplication.current; }
	EOF;

// Rule Application
ruleApplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='application'
		{
			newLeafNode(otherlv_0, grammarAccess.getApplicationAccess().getApplicationKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getApplicationAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getApplicationAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getApplicationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessRule()); }
	iv_ruleProcess=ruleProcess
	{ $current=$iv_ruleProcess.current; }
	EOF;

// Rule Process
ruleProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='process'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessAccess().getProcessKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getProcessAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleEventLog
entryRuleEventLog returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventLogRule()); }
	iv_ruleEventLog=ruleEventLog
	{ $current=$iv_ruleEventLog.current; }
	EOF;

// Rule EventLog
ruleEventLog returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEventLogAccess().getOnSuccessParserRuleCall_0());
		}
		this_OnSuccess_0=ruleOnSuccess
		{
			$current = $this_OnSuccess_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventLogAccess().getOnBreachParserRuleCall_1());
		}
		this_OnBreach_1=ruleOnBreach
		{
			$current = $this_OnBreach_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOnSuccess
entryRuleOnSuccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnSuccessRule()); }
	iv_ruleOnSuccess=ruleOnSuccess
	{ $current=$iv_ruleOnSuccess.current; }
	EOF;

// Rule OnSuccess
ruleOnSuccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='onSuccess'
		{
			newLeafNode(otherlv_0, grammarAccess.getOnSuccessAccess().getOnSuccessKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getOnSuccessAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2='log('
		{
			newLeafNode(otherlv_2, grammarAccess.getOnSuccessAccess().getLogKeyword_2());
		}
		(
			(
				lv_message_3_0=RULE_STRING
				{
					newLeafNode(lv_message_3_0, grammarAccess.getOnSuccessAccess().getMessageSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOnSuccessRule());
					}
					setWithLastConsumed(
						$current,
						"message",
						lv_message_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getOnSuccessAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getOnSuccessAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleOnBreach
entryRuleOnBreach returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnBreachRule()); }
	iv_ruleOnBreach=ruleOnBreach
	{ $current=$iv_ruleOnBreach.current; }
	EOF;

// Rule OnBreach
ruleOnBreach returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='onBreach'
		{
			newLeafNode(otherlv_0, grammarAccess.getOnBreachAccess().getOnBreachKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getOnBreachAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2='log('
		{
			newLeafNode(otherlv_2, grammarAccess.getOnBreachAccess().getLogKeyword_2());
		}
		(
			(
				lv_message_3_0=RULE_STRING
				{
					newLeafNode(lv_message_3_0, grammarAccess.getOnBreachAccess().getMessageSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOnBreachRule());
					}
					setWithLastConsumed(
						$current,
						"message",
						lv_message_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getOnBreachAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getOnBreachAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNegationParserRuleCall_0());
		}
		this_Negation_0=ruleNegation
		{
			$current = $this_Negation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpressionAccess().getBinaryOperatorLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_symbol_2_0='AND'
						{
							newLeafNode(lv_symbol_2_0, grammarAccess.getExpressionAccess().getSymbolANDKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExpressionRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_2_0, "AND");
						}
					)
				)
				    |
				(
					(
						lv_symbol_3_0='OR'
						{
							newLeafNode(lv_symbol_3_0, grammarAccess.getExpressionAccess().getSymbolORKeyword_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExpressionRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_3_0, "OR");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getRightNegationParserRuleCall_1_2_0());
					}
					lv_right_4_0=ruleNegation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Negation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNegation
entryRuleNegation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegationRule()); }
	iv_ruleNegation=ruleNegation
	{ $current=$iv_ruleNegation.current; }
	EOF;

// Rule Negation
ruleNegation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNegationAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNegationAccess().getUnaryOperatorAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_symbol_2_0='!'
					{
						newLeafNode(lv_symbol_2_0, grammarAccess.getNegationAccess().getSymbolExclamationMarkKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNegationRule());
						}
						setWithLastConsumed($current, "symbol", lv_symbol_2_0, "!");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNegationAccess().getExpressionComparisonParserRuleCall_1_2_0());
					}
					lv_expression_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNegationRule());
						}
						set(
							$current,
							"expression",
							lv_expression_3_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getPlusParserRuleCall_0());
		}
		this_Plus_0=rulePlus
		{
			$current = $this_Plus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonAccess().getBinaryOperatorLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_symbol_2_0='<='
						{
							newLeafNode(lv_symbol_2_0, grammarAccess.getComparisonAccess().getSymbolLessThanSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_2_0, "<=");
						}
					)
				)
				    |
				(
					(
						lv_symbol_3_0='>='
						{
							newLeafNode(lv_symbol_3_0, grammarAccess.getComparisonAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_3_0, ">=");
						}
					)
				)
				    |
				(
					(
						lv_symbol_4_0='>'
						{
							newLeafNode(lv_symbol_4_0, grammarAccess.getComparisonAccess().getSymbolGreaterThanSignKeyword_1_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_4_0, ">");
						}
					)
				)
				    |
				(
					(
						lv_symbol_5_0='<'
						{
							newLeafNode(lv_symbol_5_0, grammarAccess.getComparisonAccess().getSymbolLessThanSignKeyword_1_1_3_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_5_0, "<");
						}
					)
				)
				    |
				(
					(
						lv_symbol_6_0='!='
						{
							newLeafNode(lv_symbol_6_0, grammarAccess.getComparisonAccess().getSymbolExclamationMarkEqualsSignKeyword_1_1_4_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_6_0, "!=");
						}
					)
				)
				    |
				(
					(
						lv_symbol_7_0='=='
						{
							newLeafNode(lv_symbol_7_0, grammarAccess.getComparisonAccess().getSymbolEqualsSignEqualsSignKeyword_1_1_5_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_7_0, "==");
						}
					)
				)
				    |
				(
					(
						lv_symbol_8_0='is'
						{
							newLeafNode(lv_symbol_8_0, grammarAccess.getComparisonAccess().getSymbolIsKeyword_1_1_6_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_8_0, "is");
						}
					)
				)
				    |
				(
					(
						lv_symbol_9_0='as'
						{
							newLeafNode(lv_symbol_9_0, grammarAccess.getComparisonAccess().getSymbolAsKeyword_1_1_7_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_9_0, "as");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightPlusParserRuleCall_1_2_0());
					}
					lv_right_10_0=rulePlus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_10_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Plus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePlus
entryRulePlus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusRule()); }
	iv_rulePlus=rulePlus
	{ $current=$iv_rulePlus.current; }
	EOF;

// Rule Plus
rulePlus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPlusAccess().getBinaryOperatorLeftAction_1_0(),
						$current);
				}
			)
			(
				otherlv_2='+'
				{
					newLeafNode(otherlv_2, grammarAccess.getPlusAccess().getPlusSignKeyword_1_1_0());
				}
				    |
				otherlv_3='-'
				{
					newLeafNode(otherlv_3, grammarAccess.getPlusAccess().getHyphenMinusKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusAccess().getRightFactorParserRuleCall_1_2_0());
					}
					lv_right_4_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFactorAccess().getNegativeParserRuleCall_0());
		}
		this_Negative_0=ruleNegative
		{
			$current = $this_Negative_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getFactorAccess().getBinaryOperatorLeftAction_1_0(),
						$current);
				}
			)
			(
				otherlv_2='*'
				{
					newLeafNode(otherlv_2, grammarAccess.getFactorAccess().getAsteriskKeyword_1_1_0());
				}
				    |
				otherlv_3='/'
				{
					newLeafNode(otherlv_3, grammarAccess.getFactorAccess().getSolidusKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getRightNegativeParserRuleCall_1_2_0());
					}
					lv_right_4_0=ruleNegative
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Negative");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNegative
entryRuleNegative returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegativeRule()); }
	iv_ruleNegative=ruleNegative
	{ $current=$iv_ruleNegative.current; }
	EOF;

// Rule Negative
ruleNegative returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNegativeAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNegativeAccess().getUnaryOperatorAction_1_0(),
						$current);
				}
			)
			otherlv_2='-'
			{
				newLeafNode(otherlv_2, grammarAccess.getNegativeAccess().getHyphenMinusKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNegativeAccess().getExpressionPrimaryParserRuleCall_1_2_0());
					}
					lv_expression_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNegativeRule());
						}
						set(
							$current,
							"expression",
							lv_expression_3_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getLiteralValueParserRuleCall_0());
		}
		this_LiteralValue_0=ruleLiteralValue
		{
			$current = $this_LiteralValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_1_1());
			}
			this_Expression_2=ruleExpression
			{
				$current = $this_Expression_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralValueRule()); }
	iv_ruleLiteralValue=ruleLiteralValue
	{ $current=$iv_ruleLiteralValue.current; }
	EOF;

// Rule LiteralValue
ruleLiteralValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralValueAccess().getNumericValueParserRuleCall_0());
		}
		this_NumericValue_0=ruleNumericValue
		{
			$current = $this_NumericValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralValueAccess().getStringValueParserRuleCall_1());
		}
		this_StringValue_1=ruleStringValue
		{
			$current = $this_StringValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralValueAccess().getVariableValueParserRuleCall_2());
		}
		this_VariableValue_2=ruleVariableValue
		{
			$current = $this_VariableValue_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralValueAccess().getFunctionCallParserRuleCall_3());
		}
		this_FunctionCall_3=ruleFunctionCall
		{
			$current = $this_FunctionCall_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNumericValue
entryRuleNumericValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericValueRule()); }
	iv_ruleNumericValue=ruleNumericValue
	{ $current=$iv_ruleNumericValue.current; }
	EOF;

// Rule NumericValue
ruleNumericValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getNumericValueAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumericValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	iv_ruleStringValue=ruleStringValue
	{ $current=$iv_ruleStringValue.current; }
	EOF;

// Rule StringValue
ruleStringValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleVariableValue
entryRuleVariableValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableValueRule()); }
	iv_ruleVariableValue=ruleVariableValue
	{ $current=$iv_ruleVariableValue.current; }
	EOF;

// Rule VariableValue
ruleVariableValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getVariableValueAccess().getValueQualifiedNameParserRuleCall_0());
			}
			lv_value_0_0=ruleQualifiedName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getVariableValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"br.edu.unijui.gca.jabuti.Jabuti.QualifiedName");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionCallAccess().getNameQualifiedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"br.edu.unijui.gca.jabuti.Jabuti.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionCallAccess().getParamsExpressionParserRuleCall_2_0());
				}
				lv_params_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
					}
					add(
						$current,
						"params",
						lv_params_2_0,
						"br.edu.unijui.gca.jabuti.Jabuti.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getFunctionCallAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionCallAccess().getParamsExpressionParserRuleCall_3_1_0());
					}
					lv_params_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_2_0_0());
					}
					lv_expression_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getVariableAccess().getTermSessionIntervalParserRuleCall_2_1_0_0());
						}
						lv_term_3_1=ruleSessionInterval
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableRule());
							}
							set(
								$current,
								"term",
								lv_term_3_1,
								"br.edu.unijui.gca.jabuti.Jabuti.SessionInterval");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getVariableAccess().getTermMessageContentParserRuleCall_2_1_0_1());
						}
						lv_term_3_2=ruleMessageContent
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableRule());
							}
							set(
								$current,
								"term",
								lv_term_3_2,
								"br.edu.unijui.gca.jabuti.Jabuti.MessageContent");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getVariableAccess().getTermTimeIntervalParserRuleCall_2_1_0_2());
						}
						lv_term_3_3=ruleTimeInterval
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableRule());
							}
							set(
								$current,
								"term",
								lv_term_3_3,
								"br.edu.unijui.gca.jabuti.Jabuti.TimeInterval");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getVariableAccess().getTermTimeoutParserRuleCall_2_1_0_3());
						}
						lv_term_3_4=ruleTimeout
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableRule());
							}
							set(
								$current,
								"term",
								lv_term_3_4,
								"br.edu.unijui.gca.jabuti.Jabuti.Timeout");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleTerms
entryRuleTerms returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermsRule()); }
	iv_ruleTerms=ruleTerms
	{ $current=$iv_ruleTerms.current; }
	EOF;

// Rule Terms
ruleTerms returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTermsAccess().getExpressionTermExpressionTermParserRuleCall_0_0());
				}
				lv_expressionTerm_0_0=ruleExpressionTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTermsRule());
					}
					add(
						$current,
						"expressionTerm",
						lv_expressionTerm_0_0,
						"br.edu.unijui.gca.jabuti.Jabuti.ExpressionTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTermsAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_0());
				}
				lv_conditionalExpression_1_0=ruleConditionalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTermsRule());
					}
					add(
						$current,
						"conditionalExpression",
						lv_conditionalExpression_1_0,
						"br.edu.unijui.gca.jabuti.Jabuti.ConditionalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)+
;

// Entry rule entryRuleExpressionTerm
entryRuleExpressionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionTermRule()); }
	iv_ruleExpressionTerm=ruleExpressionTerm
	{ $current=$iv_ruleExpressionTerm.current; }
	EOF;

// Rule ExpressionTerm
ruleExpressionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionTermAccess().getNegationTermParserRuleCall_0());
		}
		this_NegationTerm_0=ruleNegationTerm
		{
			$current = $this_NegationTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpressionTermAccess().getBinaryTermOperatorLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_symbol_2_0=','
						{
							newLeafNode(lv_symbol_2_0, grammarAccess.getExpressionTermAccess().getSymbolCommaKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExpressionTermRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_2_0, ",");
						}
					)
				)
				    |
				(
					(
						lv_symbol_3_0='OR'
						{
							newLeafNode(lv_symbol_3_0, grammarAccess.getExpressionTermAccess().getSymbolORKeyword_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExpressionTermRule());
							}
							setWithLastConsumed($current, "symbol", lv_symbol_3_0, "OR");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionTermAccess().getRightNegationTermParserRuleCall_1_2_0());
					}
					lv_right_4_0=ruleNegationTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionTermRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"br.edu.unijui.gca.jabuti.Jabuti.NegationTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNegationTerm
entryRuleNegationTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegationTermRule()); }
	iv_ruleNegationTerm=ruleNegationTerm
	{ $current=$iv_ruleNegationTerm.current; }
	EOF;

// Rule NegationTerm
ruleNegationTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNegationTermAccess().getTermParserRuleCall_0());
		}
		this_Term_0=ruleTerm
		{
			$current = $this_Term_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNegationTermAccess().getUnaryTermOperatorAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_symbol_2_0='NOT'
					{
						newLeafNode(lv_symbol_2_0, grammarAccess.getNegationTermAccess().getSymbolNOTKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNegationTermRule());
						}
						setWithLastConsumed($current, "symbol", lv_symbol_2_0, "NOT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNegationTermAccess().getExpressionTermTermParserRuleCall_1_2_0());
					}
					lv_expressionTerm_3_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNegationTermRule());
						}
						set(
							$current,
							"expressionTerm",
							lv_expressionTerm_3_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getTermAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getTermAccess().getExpressionTermParserRuleCall_0_1());
			}
			this_ExpressionTerm_1=ruleExpressionTerm
			{
				$current = $this_ExpressionTerm_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getTermAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getSessionIntervalParserRuleCall_1());
		}
		this_SessionInterval_3=ruleSessionInterval
		{
			$current = $this_SessionInterval_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getWeekDaysIntervalParserRuleCall_2());
		}
		this_WeekDaysInterval_4=ruleWeekDaysInterval
		{
			$current = $this_WeekDaysInterval_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getTimeIntervalParserRuleCall_3());
		}
		this_TimeInterval_5=ruleTimeInterval
		{
			$current = $this_TimeInterval_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getTimeoutParserRuleCall_4());
		}
		this_Timeout_6=ruleTimeout
		{
			$current = $this_Timeout_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getMaxNumberOfOperationParserRuleCall_5());
		}
		this_MaxNumberOfOperation_7=ruleMaxNumberOfOperation
		{
			$current = $this_MaxNumberOfOperation_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getMessageContentParserRuleCall_6());
		}
		this_MessageContent_8=ruleMessageContent
		{
			$current = $this_MessageContent_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalExpressionRule()); }
	iv_ruleConditionalExpression=ruleConditionalExpression
	{ $current=$iv_ruleConditionalExpression.current; }
	EOF;

// Rule ConditionalExpression
ruleConditionalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalExpressionAccess().getBeforeSymbolLogicalOperatorParserRuleCall_0_0());
				}
				lv_beforeSymbol_0_0=ruleLogicalOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
					}
					set(
						$current,
						"beforeSymbol",
						lv_beforeSymbol_0_0,
						"br.edu.unijui.gca.jabuti.Jabuti.LogicalOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='when'
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionalExpressionAccess().getWhenKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalExpressionAccess().getQualifiedNameParserRuleCall_3_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
				    |
				this_STRING_4=RULE_STRING
				{
					newLeafNode(this_STRING_4, grammarAccess.getConditionalExpressionAccess().getSTRINGTerminalRuleCall_3_0_1());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConditionalExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_3_1_0_0());
						}
						lv_comparisonOperator_5_0=ruleComparisonOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
							}
							add(
								$current,
								"comparisonOperator",
								lv_comparisonOperator_5_0,
								"br.edu.unijui.gca.jabuti.Jabuti.ComparisonOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getQualifiedNameParserRuleCall_3_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
					    |
					this_STRING_7=RULE_STRING
					{
						newLeafNode(this_STRING_7, grammarAccess.getConditionalExpressionAccess().getSTRINGTerminalRuleCall_3_1_1_1());
					}
				)
			)?
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalOperatorLogicalOperatorParserRuleCall_4_0_0());
					}
					lv_logicalOperator_8_0=ruleLogicalOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
						}
						add(
							$current,
							"logicalOperator",
							lv_logicalOperator_8_0,
							"br.edu.unijui.gca.jabuti.Jabuti.LogicalOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			{
				newCompositeNode(grammarAccess.getConditionalExpressionAccess().getQualifiedNameParserRuleCall_4_1());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConditionalExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_4_2_0_0());
						}
						lv_comparisonOperator_10_0=ruleComparisonOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
							}
							add(
								$current,
								"comparisonOperator",
								lv_comparisonOperator_10_0,
								"br.edu.unijui.gca.jabuti.Jabuti.ComparisonOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getQualifiedNameParserRuleCall_4_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
					    |
					this_STRING_12=RULE_STRING
					{
						newLeafNode(this_STRING_12, grammarAccess.getConditionalExpressionAccess().getSTRINGTerminalRuleCall_4_2_1_1());
					}
				)
			)?
		)*
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getConditionalExpressionAccess().getRightParenthesisKeyword_5());
		}
		otherlv_14='check'
		{
			newLeafNode(otherlv_14, grammarAccess.getConditionalExpressionAccess().getCheckKeyword_6());
		}
		otherlv_15='{'
		{
			newLeafNode(otherlv_15, grammarAccess.getConditionalExpressionAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalExpressionAccess().getExpressionTermExpressionTermParserRuleCall_8_0());
				}
				lv_expressionTerm_16_0=ruleExpressionTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
					}
					set(
						$current,
						"expressionTerm",
						lv_expressionTerm_16_0,
						"br.edu.unijui.gca.jabuti.Jabuti.ExpressionTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getConditionalExpressionAccess().getRightCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalExpressionAccess().getAfterSymbolLogicalOperatorParserRuleCall_10_0());
				}
				lv_afterSymbol_18_0=ruleLogicalOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
					}
					set(
						$current,
						"afterSymbol",
						lv_afterSymbol_18_0,
						"br.edu.unijui.gca.jabuti.Jabuti.LogicalOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleLogicalOperator
entryRuleLogicalOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalOperatorRule()); }
	iv_ruleLogicalOperator=ruleLogicalOperator
	{ $current=$iv_ruleLogicalOperator.current; }
	EOF;

// Rule LogicalOperator
ruleLogicalOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_symbol_0_1=','
				{
					newLeafNode(lv_symbol_0_1, grammarAccess.getLogicalOperatorAccess().getSymbolCommaKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicalOperatorRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_0_1, null);
				}
				    |
				lv_symbol_0_2='AND'
				{
					newLeafNode(lv_symbol_0_2, grammarAccess.getLogicalOperatorAccess().getSymbolANDKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicalOperatorRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_0_2, null);
				}
				    |
				lv_symbol_0_3='OR'
				{
					newLeafNode(lv_symbol_0_3, grammarAccess.getLogicalOperatorAccess().getSymbolORKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicalOperatorRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_0_3, null);
				}
			)
		)
	)
;

// Entry rule entryRuleTimeInterval
entryRuleTimeInterval returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeIntervalRule()); }
	iv_ruleTimeInterval=ruleTimeInterval
	{ $current=$iv_ruleTimeInterval.current; }
	EOF;

// Rule TimeInterval
ruleTimeInterval returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TimeInterval'
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeIntervalAccess().getTimeIntervalKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeIntervalAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_start_2_0=RULE_STRING
				{
					newLeafNode(lv_start_2_0, grammarAccess.getTimeIntervalAccess().getStartSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeIntervalRule());
					}
					setWithLastConsumed(
						$current,
						"start",
						lv_start_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getTimeIntervalAccess().getToKeyword_3());
		}
		(
			(
				lv_end_4_0=RULE_STRING
				{
					newLeafNode(lv_end_4_0, grammarAccess.getTimeIntervalAccess().getEndSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeIntervalRule());
					}
					setWithLastConsumed(
						$current,
						"end",
						lv_end_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getTimeIntervalAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleSessionInterval
entryRuleSessionInterval returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSessionIntervalRule()); }
	iv_ruleSessionInterval=ruleSessionInterval
	{ $current=$iv_ruleSessionInterval.current; }
	EOF;

// Rule SessionInterval
ruleSessionInterval returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SessionInterval'
		{
			newLeafNode(otherlv_0, grammarAccess.getSessionIntervalAccess().getSessionIntervalKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSessionIntervalAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_frequency_2_0=RULE_INT
				{
					newLeafNode(lv_frequency_2_0, grammarAccess.getSessionIntervalAccess().getFrequencyINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSessionIntervalRule());
					}
					setWithLastConsumed(
						$current,
						"frequency",
						lv_frequency_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSessionIntervalAccess().getTimeUnitTimeUnitEnumRuleCall_3_0());
				}
				lv_timeUnit_3_0=ruleTimeUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSessionIntervalRule());
					}
					set(
						$current,
						"timeUnit",
						lv_timeUnit_3_0,
						"br.edu.unijui.gca.jabuti.Jabuti.TimeUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='per'
			{
				newLeafNode(otherlv_4, grammarAccess.getSessionIntervalAccess().getPerKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSessionIntervalAccess().getMessageContentMessageContentParserRuleCall_4_1_0_0());
						}
						lv_messageContent_5_0=ruleMessageContent
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSessionIntervalRule());
							}
							set(
								$current,
								"messageContent",
								lv_messageContent_5_0,
								"br.edu.unijui.gca.jabuti.Jabuti.MessageContent");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						lv_value_6_0=RULE_STRING
						{
							newLeafNode(lv_value_6_0, grammarAccess.getSessionIntervalAccess().getValueSTRINGTerminalRuleCall_4_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSessionIntervalRule());
							}
							setWithLastConsumed(
								$current,
								"value",
								lv_value_6_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				    |
				{
					newCompositeNode(grammarAccess.getSessionIntervalAccess().getQualifiedNameParserRuleCall_4_1_2());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getSessionIntervalAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleTimeout
entryRuleTimeout returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeoutRule()); }
	iv_ruleTimeout=ruleTimeout
	{ $current=$iv_ruleTimeout.current; }
	EOF;

// Rule Timeout
ruleTimeout returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Timeout'
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeoutAccess().getTimeoutKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeoutAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_seconds_2_0=RULE_INT
				{
					newLeafNode(lv_seconds_2_0, grammarAccess.getTimeoutAccess().getSecondsINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeoutRule());
					}
					setWithLastConsumed(
						$current,
						"seconds",
						lv_seconds_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTimeoutAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleMaxNumberOfOperation
entryRuleMaxNumberOfOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxNumberOfOperationRule()); }
	iv_ruleMaxNumberOfOperation=ruleMaxNumberOfOperation
	{ $current=$iv_ruleMaxNumberOfOperation.current; }
	EOF;

// Rule MaxNumberOfOperation
ruleMaxNumberOfOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MaxNumberOfOperation'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaxNumberOfOperationAccess().getMaxNumberOfOperationKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMaxNumberOfOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_operationsNumber_2_0=RULE_INT
				{
					newLeafNode(lv_operationsNumber_2_0, grammarAccess.getMaxNumberOfOperationAccess().getOperationsNumberINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaxNumberOfOperationRule());
					}
					setWithLastConsumed(
						$current,
						"operationsNumber",
						lv_operationsNumber_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_3='per'
			{
				newLeafNode(otherlv_3, grammarAccess.getMaxNumberOfOperationAccess().getPerKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaxNumberOfOperationAccess().getTimeUnitTimeUnitEnumRuleCall_3_1_0());
					}
					lv_timeUnit_4_0=ruleTimeUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaxNumberOfOperationRule());
						}
						set(
							$current,
							"timeUnit",
							lv_timeUnit_4_0,
							"br.edu.unijui.gca.jabuti.Jabuti.TimeUnit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getMaxNumberOfOperationAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleWeekDaysInterval
entryRuleWeekDaysInterval returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWeekDaysIntervalRule()); }
	iv_ruleWeekDaysInterval=ruleWeekDaysInterval
	{ $current=$iv_ruleWeekDaysInterval.current; }
	EOF;

// Rule WeekDaysInterval
ruleWeekDaysInterval returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='WeekDaysInterval'
		{
			newLeafNode(otherlv_0, grammarAccess.getWeekDaysIntervalAccess().getWeekDaysIntervalKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWeekDaysIntervalAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWeekDaysIntervalAccess().getStartWeekDayEnumRuleCall_2_0());
				}
				lv_start_2_0=ruleWeekDay
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWeekDaysIntervalRule());
					}
					set(
						$current,
						"start",
						lv_start_2_0,
						"br.edu.unijui.gca.jabuti.Jabuti.WeekDay");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getWeekDaysIntervalAccess().getToKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWeekDaysIntervalAccess().getEndWeekDayEnumRuleCall_4_0());
				}
				lv_end_4_0=ruleWeekDay
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWeekDaysIntervalRule());
					}
					set(
						$current,
						"end",
						lv_end_4_0,
						"br.edu.unijui.gca.jabuti.Jabuti.WeekDay");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getWeekDaysIntervalAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleMessageContent
entryRuleMessageContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageContentRule()); }
	iv_ruleMessageContent=ruleMessageContent
	{ $current=$iv_ruleMessageContent.current; }
	EOF;

// Rule MessageContent
ruleMessageContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MessageContent'
		{
			newLeafNode(otherlv_0, grammarAccess.getMessageContentAccess().getMessageContentKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					lv_content_2_0=RULE_STRING
					{
						newLeafNode(lv_content_2_0, grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMessageContentRule());
						}
						setWithLastConsumed(
							$current,
							"content",
							lv_content_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			{
				newCompositeNode(grammarAccess.getMessageContentAccess().getQualifiedNameParserRuleCall_2_1());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMessageContentAccess().getComparisonOperatorComparisonOperatorParserRuleCall_3_0_0());
					}
					lv_comparisonOperator_4_0=ruleComparisonOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMessageContentRule());
						}
						set(
							$current,
							"comparisonOperator",
							lv_comparisonOperator_4_0,
							"br.edu.unijui.gca.jabuti.Jabuti.ComparisonOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMessageContentAccess().getExpressionExpressionParserRuleCall_3_1_0());
					}
					lv_expression_5_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMessageContentRule());
						}
						set(
							$current,
							"expression",
							lv_expression_5_0,
							"br.edu.unijui.gca.jabuti.Jabuti.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6='per'
				{
					newLeafNode(otherlv_6, grammarAccess.getMessageContentAccess().getPerKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMessageContentAccess().getTimeUnitTimeUnitEnumRuleCall_3_2_1_0());
						}
						lv_timeUnit_7_0=ruleTimeUnit
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMessageContentRule());
							}
							set(
								$current,
								"timeUnit",
								lv_timeUnit_7_0,
								"br.edu.unijui.gca.jabuti.Jabuti.TimeUnit");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleComparisonOperator
entryRuleComparisonOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonOperatorRule()); }
	iv_ruleComparisonOperator=ruleComparisonOperator
	{ $current=$iv_ruleComparisonOperator.current; }
	EOF;

// Rule ComparisonOperator
ruleComparisonOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_symbol_0_0='<='
				{
					newLeafNode(lv_symbol_0_0, grammarAccess.getComparisonOperatorAccess().getSymbolLessThanSignEqualsSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonOperatorRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_0_0, "<=");
				}
			)
		)
		    |
		(
			(
				lv_symbol_1_0='>='
				{
					newLeafNode(lv_symbol_1_0, grammarAccess.getComparisonOperatorAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonOperatorRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_1_0, ">=");
				}
			)
		)
		    |
		(
			(
				lv_symbol_2_0='>'
				{
					newLeafNode(lv_symbol_2_0, grammarAccess.getComparisonOperatorAccess().getSymbolGreaterThanSignKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonOperatorRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_2_0, ">");
				}
			)
		)
		    |
		(
			(
				lv_symbol_3_0='<'
				{
					newLeafNode(lv_symbol_3_0, grammarAccess.getComparisonOperatorAccess().getSymbolLessThanSignKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonOperatorRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_3_0, "<");
				}
			)
		)
		    |
		(
			(
				lv_symbol_4_0='!='
				{
					newLeafNode(lv_symbol_4_0, grammarAccess.getComparisonOperatorAccess().getSymbolExclamationMarkEqualsSignKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonOperatorRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_4_0, "!=");
				}
			)
		)
		    |
		(
			(
				lv_symbol_5_0='=='
				{
					newLeafNode(lv_symbol_5_0, grammarAccess.getComparisonOperatorAccess().getSymbolEqualsSignEqualsSignKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonOperatorRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_5_0, "==");
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='.*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
		}
	)
;

// Rule RolePlayer
ruleRolePlayer returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='application'
			{
				$current = grammarAccess.getRolePlayerAccess().getAPPLICATIONEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRolePlayerAccess().getAPPLICATIONEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='process'
			{
				$current = grammarAccess.getRolePlayerAccess().getPROCESSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRolePlayerAccess().getPROCESSEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Operation
ruleOperation returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='push'
			{
				$current = grammarAccess.getOperationAccess().getPUSHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperationAccess().getPUSHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='poll'
			{
				$current = grammarAccess.getOperationAccess().getPOLLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperationAccess().getPOLLEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='write'
			{
				$current = grammarAccess.getOperationAccess().getWRITEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperationAccess().getWRITEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='read'
			{
				$current = grammarAccess.getOperationAccess().getREADEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOperationAccess().getREADEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='request'
			{
				$current = grammarAccess.getOperationAccess().getREQUESTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOperationAccess().getREQUESTEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='response'
			{
				$current = grammarAccess.getOperationAccess().getRESPONSEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getOperationAccess().getRESPONSEEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule WeekDay
ruleWeekDay returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Sunday'
			{
				$current = grammarAccess.getWeekDayAccess().getSUNDAYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getWeekDayAccess().getSUNDAYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Monday'
			{
				$current = grammarAccess.getWeekDayAccess().getMONDAYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getWeekDayAccess().getMONDAYEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Tuesday'
			{
				$current = grammarAccess.getWeekDayAccess().getTUESDAYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getWeekDayAccess().getTUESDAYEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Wednesday'
			{
				$current = grammarAccess.getWeekDayAccess().getWEDNESDAYEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getWeekDayAccess().getWEDNESDAYEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Thursday'
			{
				$current = grammarAccess.getWeekDayAccess().getTHURSDAYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getWeekDayAccess().getTHURSDAYEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Friday'
			{
				$current = grammarAccess.getWeekDayAccess().getFRIDAYEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getWeekDayAccess().getFRIDAYEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Saturday'
			{
				$current = grammarAccess.getWeekDayAccess().getSATURDAYEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getWeekDayAccess().getSATURDAYEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule TimeUnit
ruleTimeUnit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Second'
			{
				$current = grammarAccess.getTimeUnitAccess().getSECONDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTimeUnitAccess().getSECONDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Minute'
			{
				$current = grammarAccess.getTimeUnitAccess().getMINUTEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTimeUnitAccess().getMINUTEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Hour'
			{
				$current = grammarAccess.getTimeUnitAccess().getHOUREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTimeUnitAccess().getHOUREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Day'
			{
				$current = grammarAccess.getTimeUnitAccess().getDAYEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTimeUnitAccess().getDAYEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Week'
			{
				$current = grammarAccess.getTimeUnitAccess().getWEEKEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTimeUnitAccess().getWEEKEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Month'
			{
				$current = grammarAccess.getTimeUnitAccess().getMONTHEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTimeUnitAccess().getMONTHEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Year'
			{
				$current = grammarAccess.getTimeUnitAccess().getYEAREnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getTimeUnitAccess().getYEAREnumLiteralDeclaration_6());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
